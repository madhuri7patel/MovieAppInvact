{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport MovieData from \"../data/movie.json\";\n\n// Movie slice\nconst movieSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    list: MovieData,\n    status: \"idle\",\n    // Changed from null to 'idle' to represent the initial state more clearly\n    error: null\n  },\n  reducers: {\n    addMovie: (state, action) => {\n      state.list.push(action.payload);\n    },\n    editMovie: (state, action) => {\n      const index = state.list.findIndex(movie => movie.id == action.payload.id);\n      if (index !== -1) {\n        state.list[index] = {\n          ...state.list[index],\n          ...action.payload\n        };\n      }\n    },\n    deleteMovie: (state, action) => {\n      state.list = state.list.filter(movie => movie.id !== action.payload);\n    },\n    addReview: (state, action) => {\n      const index = state.list.findIndex(movie => movie.id == action.payload.id);\n      if (index !== -1) {\n        var _state$list$index, _state$list$index$rev;\n        (_state$list$index = state.list[index]) === null || _state$list$index === void 0 ? void 0 : (_state$list$index$rev = _state$list$index.reviews) === null || _state$list$index$rev === void 0 ? void 0 : _state$list$index$rev.push(action.payload.review);\n      }\n    },\n    toggleWatchStatus: (state, action) => {\n      const index = state.list.findIndex(movie => movie.id === action.payload);\n      if (index !== -1) {\n        state.list[index].watched = !state.list[index].watched;\n      }\n    }\n  }\n});\nexport const {\n  addMovie,\n  editMovie,\n  deleteMovie,\n  toggleWatchStatus,\n  addReview\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","MovieData","movieSlice","name","initialState","list","status","error","reducers","addMovie","state","action","push","payload","editMovie","index","findIndex","movie","id","deleteMovie","filter","addReview","_state$list$index","_state$list$index$rev","reviews","review","toggleWatchStatus","watched","actions","reducer"],"sources":["/home/madhuri/MovieAppInvact/src/redux/movieSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport MovieData from \"../data/movie.json\";\n\n// Movie slice\nconst movieSlice = createSlice({\n  name: \"movies\",\n  initialState: {\n    list: MovieData,\n    status: \"idle\", // Changed from null to 'idle' to represent the initial state more clearly\n    error: null,\n  },\n  reducers: {\n    addMovie: (state, action) => {\n      state.list.push(action.payload);\n    },\n    editMovie: (state, action) => {\n      const index = state.list.findIndex(\n        (movie) => movie.id == action.payload.id\n      );\n      if (index !== -1) {\n        state.list[index] = {\n          ...state.list[index],\n          ...action.payload,\n        };\n      }\n    },\n    deleteMovie: (state, action) => {\n      state.list = state.list.filter((movie) => movie.id !== action.payload);\n    },\n    addReview: (state, action) => {\n      const index = state.list.findIndex(\n        (movie) => movie.id == action.payload.id\n      );\n\n      if (index !== -1) {\n        state.list[index]?.reviews?.push(action.payload.review);\n      }\n    },\n    toggleWatchStatus: (state, action) => {\n      const index = state.list.findIndex(\n        (movie) => movie.id === action.payload\n      );\n      if (index !== -1) {\n        state.list[index].watched = !state.list[index].watched;\n      }\n    },\n  },\n});\n\nexport const {\n  addMovie,\n  editMovie,\n  deleteMovie,\n  toggleWatchStatus,\n  addReview,\n} = movieSlice.actions;\n\nexport default movieSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,oBAAoB;;AAE1C;AACA,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,IAAI,EAAEJ,SAAS;IACfK,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,IAAI,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACjC,CAAC;IACDC,SAAS,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMI,KAAK,GAAGL,KAAK,CAACL,IAAI,CAACW,SAAS,CAC/BC,KAAK,IAAKA,KAAK,CAACC,EAAE,IAAIP,MAAM,CAACE,OAAO,CAACK,EACxC,CAAC;MACD,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBL,KAAK,CAACL,IAAI,CAACU,KAAK,CAAC,GAAG;UAClB,GAAGL,KAAK,CAACL,IAAI,CAACU,KAAK,CAAC;UACpB,GAAGJ,MAAM,CAACE;QACZ,CAAC;MACH;IACF,CAAC;IACDM,WAAW,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACL,IAAI,CAACe,MAAM,CAAEH,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;IACxE,CAAC;IACDQ,SAAS,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMI,KAAK,GAAGL,KAAK,CAACL,IAAI,CAACW,SAAS,CAC/BC,KAAK,IAAKA,KAAK,CAACC,EAAE,IAAIP,MAAM,CAACE,OAAO,CAACK,EACxC,CAAC;MAED,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAAA,IAAAO,iBAAA,EAAAC,qBAAA;QAChB,CAAAD,iBAAA,GAAAZ,KAAK,CAACL,IAAI,CAACU,KAAK,CAAC,cAAAO,iBAAA,wBAAAC,qBAAA,GAAjBD,iBAAA,CAAmBE,OAAO,cAAAD,qBAAA,uBAA1BA,qBAAA,CAA4BX,IAAI,CAACD,MAAM,CAACE,OAAO,CAACY,MAAM,CAAC;MACzD;IACF,CAAC;IACDC,iBAAiB,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACpC,MAAMI,KAAK,GAAGL,KAAK,CAACL,IAAI,CAACW,SAAS,CAC/BC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKP,MAAM,CAACE,OACjC,CAAC;MACD,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBL,KAAK,CAACL,IAAI,CAACU,KAAK,CAAC,CAACY,OAAO,GAAG,CAACjB,KAAK,CAACL,IAAI,CAACU,KAAK,CAAC,CAACY,OAAO;MACxD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXlB,QAAQ;EACRK,SAAS;EACTK,WAAW;EACXO,iBAAiB;EACjBL;AACF,CAAC,GAAGnB,UAAU,CAAC0B,OAAO;AAEtB,eAAe1B,UAAU,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}