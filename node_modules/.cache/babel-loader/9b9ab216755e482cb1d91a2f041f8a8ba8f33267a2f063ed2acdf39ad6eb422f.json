{"ast":null,"code":"var _jsxFileName = \"/home/madhuri/MovieAppInvact/src/components/AddEditPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMovie, editMovie } from \"../redux/movieSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Input from \"./Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEditMoviePage = () => {\n  _s();\n  const movies = useSelector(state => state.movies.list);\n  const [formFields, setFormFields] = useState({\n    title: \"\",\n    description: \"\",\n    releaseYear: \"\",\n    genre: \"\"\n  });\n  const dispatch = useDispatch();\n  const Navigate = useNavigate();\n  const params = useParams();\n  const objectAreValid = obj => {\n    return Object.keys(obj).every(key => obj[key] !== \"\");\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if all the field is filled or not\n    if (objectAreValid(formFields)) {\n      if (params.id) {\n        dispatch(editMovie({\n          id: params.id,\n          ...formFields\n        }));\n      } else {\n        dispatch(addMovie({\n          id: movies.length + 1,\n          ...formFields\n        }));\n      }\n      Navigate(\"/\");\n    }\n  };\n  const handleChange = e => {\n    setFormFields({\n      ...formFields,\n      [e.target.name]: e.target.value\n    });\n  };\n  useEffect(() => {\n    if (params.id) {\n      const movieData = movies.find(movie => movie.id == params.id);\n      if (movieData) {\n        const {\n          title,\n          description,\n          releaseYear,\n          genre\n        } = movieData;\n        setFormFields({\n          title,\n          description,\n          releaseYear,\n          genre\n        });\n      }\n    }\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 10,\n        width: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Title\",\n        name: \"title\",\n        value: formFields.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Description\",\n        name: \"description\",\n        value: formFields.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"ReleaseYear\",\n        name: \"releaseYear\",\n        value: formFields.releaseYear,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Genre\",\n        name: \"genre\",\n        value: formFields.genre,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        style: {\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"edit-button\",\n          children: params.id ? \"Edit\" : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => Navigate(\"/\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AddEditMoviePage, \"ZnHWlzGaswf/K8N1e2hEr7FbIGY=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useParams];\n});\n_c = AddEditMoviePage;\nexport default AddEditMoviePage;\nvar _c;\n$RefreshReg$(_c, \"AddEditMoviePage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","addMovie","editMovie","useNavigate","useParams","Input","jsxDEV","_jsxDEV","AddEditMoviePage","_s","movies","state","list","formFields","setFormFields","title","description","releaseYear","genre","dispatch","Navigate","params","objectAreValid","obj","Object","keys","every","key","handleSubmit","e","preventDefault","id","length","handleChange","target","name","value","movieData","find","movie","style","display","justifyContent","height","alignItems","children","onSubmit","flexDirection","gap","width","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onClick","_c","$RefreshReg$"],"sources":["/home/madhuri/MovieAppInvact/src/components/AddEditPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMovie, editMovie } from \"../redux/movieSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Input from \"./Input/Input\";\n\nconst AddEditMoviePage = () => {\n  const movies = useSelector((state) => state.movies.list);\n  const [formFields, setFormFields] = useState({\n    title: \"\",\n    description: \"\",\n    releaseYear: \"\",\n    genre: \"\",\n  });\n  const dispatch = useDispatch();\n  const Navigate = useNavigate();\n  const params = useParams();\n\n  const objectAreValid = (obj) => {\n    return Object.keys(obj).every((key) => obj[key] !== \"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Check if all the field is filled or not\n    if (objectAreValid(formFields)) {\n      if (params.id) {\n        dispatch(\n          editMovie({\n            id: params.id,\n            ...formFields,\n          })\n        );\n      } else {\n        dispatch(\n          addMovie({\n            id: movies.length + 1,\n            ...formFields,\n          })\n        );\n      }\n\n      Navigate(\"/\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormFields({\n      ...formFields,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    if (params.id) {\n      const movieData = movies.find((movie) => movie.id == params.id);\n      if (movieData) {\n        const { title, description, releaseYear, genre } = movieData;\n\n        setFormFields({\n          title,\n          description,\n          releaseYear,\n          genre,\n        });\n      }\n    }\n  }, [params]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        alignItems: \"center\",\n      }}\n    >\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 10,\n          width: 500,\n        }}\n      >\n        <Input\n          label=\"Title\"\n          name=\"title\"\n          value={formFields.title}\n          onChange={handleChange}\n        />\n        <Input\n          label=\"Description\"\n          name=\"description\"\n          value={formFields.description}\n          onChange={handleChange}\n        />\n        <Input\n          label=\"ReleaseYear\"\n          name=\"releaseYear\"\n          value={formFields.releaseYear}\n          onChange={handleChange}\n        />\n        <Input\n          label=\"Genre\"\n          name=\"genre\"\n          value={formFields.genre}\n          onChange={handleChange}\n        />\n\n        <div className=\"button-group\" style={{ justifyContent: \"center\" }}>\n          <button type=\"submit\" className=\"edit-button\">\n            {params.id ? \"Edit\" : \"Add\"}\n          </button>\n          <button className=\"delete-button\" onClick={() => Navigate(\"/\")}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddEditMoviePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}